library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
?ggplot
?aes
library(data.table)
example(data.table)
View(DT)
DT
DT[2]
DT[,2]
keys(DT)
key(DT)
DT[a]
DT["a"]
DT["a", 1]
DT[c("a", 1)]
DT[J("a", 1)]
DT[.("a", 1)]
DT[, sum(y), by=x]
DT[, sum(v), by=x]
DT[, sum(y), by=v]
DT[, sum(v), by=v]
DT[, sum(m), by=v]
DT[v < 10]
DT[v < 10, sum(v), by=x]
DT[J("c", 1:10)]
"a":"c"
letters("a":"c")
?letters
letters(1:3)
letters
DT[J(letters[1:2], 1:10)]
DT[letters[1:2]]
DT[letters[1:2]][1:10]
DT[letters[1:2]][J(1:10)]
DT[letters[1:2]][J("a", 1:10)]
DT[letters[1:2]][J("a", "b", 1:10)]
DT[J("c", 1:10)]
DT[J(!"c", 1:10)]
DT[J(letters[1:2], 1:10)]
DT[J(c("a","b"), 1:10)]
DT[c("a","b"), 1:10)]
DT[J("c", 1:10)]
DT[J("c", 1:10), nomatch = 0]
DT[J("c", 1:10), nomatch = "roll"]
tables()
DT[J("c", 1:10), roll = TRUE]
DT[J("b", 1:10), roll = TRUE]
slidify("index.Rmd")
setwd("~/Documents/cv-slidify/assets/css")
slidify("index.Rmd")
setwd("~/Documents/cv-slidify")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(faraway)
install.packages(faraway)
install.packages("faraway")
library(faraway)
?vif
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?vapply
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(rCharts)
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
slidify("index.Rmd")
library(rCharts)
slidify("index.Rmd")
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d1 <- dPlot(
y="title",
x="subscribers",
groups="title",
data=df,
type="bar",
height=600,
width=800,
bounds = list(x=200, y=30, width=600, height=500)
)
d1
d1$xAxis(type="addMeasureAxis", outputFormat="#,")
d1$yAxis(type="addCategoryAxis")
d1
?dPlot
??dPlot
d1 <- dPlot(
y="title",
x="subscribers",
groups="title",
data=df,
type="bar",
height=600,
width=800,
bounds = list(x=10, y=10, width=600, height=500)
)
d1$xAxis(type="addMeasureAxis", outputFormat="#,")
d1$yAxis(type="addCategoryAxis")
d1
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n2 <- nPlot(Freq ~ Hair, group = 'Eye', data = hair_eye_male, type = 'multiBarChart')
n2
?nplot
?nPlot
View(hair_eye_male)
View(df)
View(hair_eye_male)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n2 <- nPlot(language ~ score, data = df, type = 'multiBarChart')
n2
n2 <- nPlot(language ~ score, data = df, type = 'barChart')
n2
View(hair_eye_male)
library(ggvis)
# Bar graph with continuous x, and y value supplied in the data
pressure %>% ggvis(x = ~temperature, y = ~pressure) %>%
layer_bars()
pressure %>% ggvis(x = ~temperature, y = ~pressure) %>%
layer_bars()
library(dplyr)
pressure %>% ggvis(x = ~temperature, y = ~pressure) %>%
layer_bars()
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d1 <- dPlot(
y="title",
x="subscribers",
groups="title",
data=df,
type="bar",
height=600,
width=800
)
d1$xAxis(type="addMeasureAxis", outputFormat="#,")
d1$yAxis(type="addCategoryAxis")
d1
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
rownames(df) = c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript")
d1 <- dPlot(
y="title",
x="subscribers",
groups="title",
data=df,
type="bar",
height=600,
width=800
)
d1$xAxis(type="addMeasureAxis", outputFormat="#,")
d1$yAxis(type="addCategoryAxis")
d1
View(df)
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d = ggplot(data=df, aes(x=language, y = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24))
d
png("world.png",height=600,width=800)
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d = ggplot(data=df, aes(x=language, y = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24))
d
dev.off()
d
d
slidify("index.Rmd")
?qplot
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
means.barplot <- qplot(x=language, y=score,
data=df, geom="bar", stat="identity",
position="dodge")
means.barplot
means.barplot <- qplot(x=language, y=score, fill=score,
data=df, geom="bar", stat="identity",
position="dodge")
means.barplot
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24))
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=theme_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1)) + xlim(0,10)
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks = seq(0, 12, 1)) + ylim(0,10)
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0,10) + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0,10) # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks=1:10) + ylim(0,10) # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks=1:10) #+ ylim(0,10) # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
?ylim
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + scale_y_continuous(breaks=1:10) + ylim(0:10) # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:10) + scale_y_continuous(breaks=1:10)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:10) + scale_y_continuous(breaks=1:10)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:7) + scale_y_continuous(breaks=1:10)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:7) + scale_y_continuous(breaks=1:6)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:7) + scale_x_continuous(breaks=1:6)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:7) + scale_y_continuous(breaks=1:6, limits=1:6)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + ylim(0:7)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d #+ ylim(0:7)  # + scale_y_continuous(breaks = seq(0, 10, 1))
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
View(df)
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d
slidify("index.Rmd")
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d = d + opts(
panel.background = theme_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = theme_rect(fill = "transparent",colour = NA)
)
d
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d = d + theme(
panel.background = theme_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = theme_rect(fill = "transparent",colour = NA)
)
d
slidify("index.Rmd")
png('tr_tst1.png',width=600,height=400,units="px",bg = "transparent")
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d = d + theme(
panel.background = theme_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = theme_blank(),
panel.grid.major = theme_blank(),
plot.background = theme_rect(fill = "transparent",colour = NA)
)
d
dev.off()
d <- rnorm(100) #generating random data
#this returns transparent png
png('tr_tst1.png',width=300,height=300,units="px",bg = "transparent")
boxplot(d)
dev.off()
png('tr_tst1.png',width=600,height=400,units="px",bg = "transparent")
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d = d + theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
d
dev.off()
slidify("index.Rmd")
slidify("index.Rmd")
png('skills.png',width=600,height=400,units="px",bg = "transparent")
df = data.frame(c("Ruby (on Rails)", "SQL", "HTML/CSS", "R", "Javascript"), c(8, 7, 6, 6, 5))
colnames(df) = c("language", "score")
d = ggplot(data=df, aes(x=language, y = score, fill = score))
d = d + geom_bar(position="dodge",stat="identity") + coord_flip()
d = d + theme(axis.text.x = element_text(size=24, family="Helvetica"),axis.text.y = element_text(size=24), axis.title.x=element_blank(), axis.title.y=element_blank())
d = d + theme(
panel.background = element_rect(fill = "transparent",colour = NA), # or theme_blank()
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
dev.off()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
